services:
  proxy:
    image: nginx:alpine
    configs:
      - source: proxy_config
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - fe
      - api
    networks:
      front-tier:
        ipv4_address: 172.15.0.2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/sysadmin/ssl:/ssl
    restart: unless-stopped

  fe:
    image: ghcr.io/aomapjjj/integrated-project/fe
    build: 
      context: https://github.com/aomapjjj/integrated-project.git#main:fronted
      dockerfile: multi.Dockerfile
    networks:
      front-tier:
        ipv4_address: 172.15.0.3
        aliases:
          - fronted
    restart: unless-stopped

  api:
    image: ghcr.io/aomapjjj/integrated-project/api
    build: 
      context:  https://github.com/aomapjjj/integrated-project.git#main:service-task-SJ-3
      dockerfile: multi.Dockerfile
    environment:
      - mysql_url=databasesj3
    depends_on:
      db:
        condition: service_healthy
#        condition: service_started
    networks:
      front-tier:
        ipv4_address: 172.15.0.4
        aliases:
          - service-task-SJ-3
      back-tier:
        ipv4_address: 172.15.1.4
    restart: unless-stopped

  db:
    image: mysql/mysql-server
    env_file: databasesj3/env.list
    volumes: 
      - ./databasesj3/scripts:/docker-entrypoint-initdb.d
      - db-datadir:/var/lib/mysql
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 2s
      timeout: 2s
      retries: 20 
    networks:
      back-tier:
        ipv4_address: 172.15.1.5
        aliases:
          - databasesj3
    restart: unless-stopped


configs:
  proxy_config:
    file: sj3-proxy/proxy.conf

volumes:
  db-datadir:

networks:
  front-tier:
    ipam:
       config:
         - subnet: "172.15.0.0/24"
  back-tier:
    ipam:
       config:
         - subnet: "172.15.1.0/24"
